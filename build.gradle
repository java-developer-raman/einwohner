buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    /*
     * Mit dieser plugin, Man kann "dependency Management" konfiguration wie in maven steht.
     * Alle information steht bei dieser link
     *
     * https://spring.io/blog/2015/02/23/better-dependency-management-for-gradle
     */

    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
    }
}
plugins {
    id "org.sonarqube" version "2.6.2"
}

allprojects {
    group 'com.sharma'
    version '1.0-SNAPSHOT'
    sonarqube {
        properties {
            property "sonar.sources", "src"
            property "sonar.issuesReport.html.enable", "true"
        }
    }
}
apply from: "$rootDir/gradle/sonar.gradle"
//Prufen wir sonar server bevor code analysis
project.tasks["sonarqube"].dependsOn 'schaltSonarServerEinFallsErNichtLaüft'

subprojects { p ->
    repositories {
        mavenCentral()
        jcenter()
    }
    apply plugin: 'io.spring.dependency-management'

    plugins.withId('java') {

        jar {
            manifest {
                attributes("Implementation-Title": p.name,
                        "Implementation-Version": version, "Author": "Raman Sharma")
            }
        }
        configurations.all {
            exclude group: "commons-logging", module: "commons-logging"
        }
        p.apply from: "$rootDir/gradle/dependencies.gradle"
    }

    /* Setting für PMD, Checkstyle und Findbugs*/

    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    findbugs {
        ignoreFailures=true
    }

    pmd {
        ignoreFailures = true
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    tasks.withType(Pmd){
        reports{
            xml.enabled=true
            html.enabled=true
        }
    }
}